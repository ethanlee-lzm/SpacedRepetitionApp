(()=>{"use strict";class t{constructor(){this.projects=[]}addProject(t){this.projects.indexOf(t)>0||this.projects.push(t)}deleteProject(t){const e=this.projects.find((e=>e.name===t));this.projects.splice(this.projects.indexOf(e),1)}getProject(t){return this.projects.find((e=>e.name===t))}getProjects(){return this.projects}}class e{static saveTodoList(t){localStorage.setItem("todoList",JSON.stringify(t))}static getTodoList(){return Object.assign(new t,JSON.parse(localStorage.getItem("todoList")))}static addProject(s){let o=new t;null!==e.getTodoList()&&(o=Object.assign(new t,e.getTodoList())),o.addProject(s),e.saveTodoList(o)}static deleteProject(s){const o=Object.assign(new t,e.getTodoList());o.deleteProject(s),e.saveTodoList(o)}static addTask(s,o){const c=Object.assign(new t,e.getTodoList());c.getProject(s).addTask(o),e.saveTodoList(c)}static removeTask(s,o){const c=Object.assign(new t,e.getTodoList());c.getProject(s).deleteTask(o),e.saveTodoList(c)}}class s{static load(){s.renderContent(),s.initRenderedButtons(),s.initDefaultButtons(),s.openInboxProjects()}static renderContent(){e.getTodoList().getProjects().forEach((t=>this.createProject(t.name)))}static initRenderedButtons(){document.querySelectorAll("[data-project-button]").forEach((t=>t.addEventListener("click",s.handleProjectButton)))}static initDefaultButtons(){const t=document.getElementById("button-inbox-projects"),e=document.getElementById("button-today-projects"),o=document.getElementById("button-week-projects"),c=document.getElementById("button-add-project"),n=document.getElementById("button-add-project-popup"),d=document.getElementById("button-cancel-project-popup"),a=document.getElementById("button-add-task"),i=document.getElementById("button-add-task-popup"),r=document.getElementById("button-cancel-task-popup");t.addEventListener("click",s.openInboxProjects),e.addEventListener("click",s.openTodayProjects),o.addEventListener("click",s.openWeekProjects),c.addEventListener("click",s.openAddProjectPopup),n.addEventListener("click",s.addProject),d.addEventListener("click",s.closeAddProjectPopup),a.addEventListener("click",s.openAddTaskPopup),i.addEventListener("click",s.addTask),r.addEventListener("click",s.closeAddTaskPopup)}static openInboxProjects(){}static openTodayProjects(){}static openWeekProjects(){}static openAddProjectPopup(){document.getElementById("add-project-popup").classList.add("active"),this.classList.add("active")}static closeAddProjectPopup(){document.getElementById("add-project-popup").classList.remove("active"),document.getElementById("input-add-project-popup").value="",document.getElementById("button-add-project").classList.remove("active")}static addProject(){const t=document.getElementById("input-add-project-popup");""!==t.value&&s.createProject(t.value),s.closeAddProjectPopup()}static createProject(t){document.getElementById("user-projects").innerHTML+=` \n      <button class="button-project" data-project-button>\n        <div class="left-project-panel">\n          <i class="fas fa-tasks"></i>\n          <span>${t}</span>\n        </div>\n        <div class="right-project-panel">\n          <i class="fas fa-times"></i>\n        </div>\n      </button>`,s.initRenderedButtons()}static openAddTaskPopup(){document.getElementById("add-task-popup").classList.add("active"),this.classList.add("active")}static closeAddTaskPopup(){document.getElementById("add-task-popup").classList.remove("active"),document.getElementById("input-add-task-popup").value="",document.getElementById("button-add-task").classList.remove("active")}static addTask(){const t=document.getElementById("input-add-task-popup");""!==t.value&&s.createTask(t.value,"No date"),s.closeAddTaskPopup()}static createTask(t,e){document.getElementById("tasks-list").innerHTML+=`\n      <button class="button-task">\n        <div class="left-task-panel">\n          <i class="far fa-circle"></i>\n          <p class="task-content">${t}</p>\n        </div>\n        <div class="right-task-panel">\n          <div class="due-date">${e}</div>\n          <i class="fas fa-times"></i>\n        </div>\n      </button>`}static handleProjectButton(t){const e=this.children[0].children[1].textContent;t.target.classList.contains("fas")?s.deleteProject(e):s.openProject(e)}static openProject(t){console.log(t+" open")}static deleteProject(t){console.log(t+" delete")}static handleTaskButton(){}static setTaskCompleted(){}static deleteTask(){}static renameTask(){}static setTaskDate(){}}document.addEventListener("DOMContentLoaded",s.load())})();