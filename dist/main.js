(()=>{"use strict";class t{constructor(t,e="No date"){this.name=t,this.dueDate=e}setName(t){this.name=t}getName(){return this.name}setDate(t){this.dueDate=t}getDate(){return this.dueDate}}class e{constructor(t){this.name=t,this.tasks=[]}setName(t){this.name=t}getName(){return this.name}addTask(t){this.tasks.indexOf(t)>0||this.tasks.push(t)}deleteTask(t){const e=this.tasks.find((e=>e.name===t));this.tasks.splice(this.tasks.indexOf(e),1)}getTask(e){return Object.assign(new t,this.tasks.find((t=>t.name=e)))}getTasks(){return this.tasks}contains(t){return this.tasks.some((e=>e.name===t))}}class s{constructor(){this.projects=[]}addProject(t){this.projects.indexOf(t)>0||this.projects.push(t)}deleteProject(t){const e=this.projects.find((e=>e.name===t));this.projects.splice(this.projects.indexOf(e),1)}getProject(t){return Object.assign(new e,this.projects.find((e=>e.name===t)))}getProjects(){return this.projects}contains(t){return this.projects.some((e=>e.name===t))}}class a{static saveTodoList(t){localStorage.setItem("todoList",JSON.stringify(t))}static getTodoList(){return Object.assign(new s,JSON.parse(localStorage.getItem("todoList")))}static addProject(t){let e=new s;null!==a.getTodoList()&&(e=Object.assign(new s,a.getTodoList())),e.addProject(t),a.saveTodoList(e)}static deleteProject(t){const e=Object.assign(new s,a.getTodoList());e.deleteProject(t),a.saveTodoList(e)}static addTask(t,e){const n=Object.assign(new s,a.getTodoList());n.getProject(t).addTask(e),a.saveTodoList(n)}static deleteTask(t,e){const n=Object.assign(new s,a.getTodoList());n.getProject(t).deleteTask(e),a.saveTodoList(n)}}class n{static loadHomepage(){n.initAddProjectButtons(),n.loadProjects()}static loadProjects(){a.getTodoList().getProjects().forEach((t=>n.createProject(t.name)))}static loadTasks(t){a.getTodoList().getProject(t).getTasks().forEach((t=>n.createTask(t.name,t.dueDate)))}static loadProjectContent(t){document.getElementById("project-preview").innerHTML=`\n      <h1>${t}</h1>\n        <div class="tasks-list" id="tasks-list"></div>\n        <button class="button-add-task" id="button-add-task">\n          <i class="fas fa-plus"></i>\n          Add Task\n        </button>\n        <div class="add-task-popup" id="add-task-popup">\n          <input\n            class="input-add-task-popup"\n            id="input-add-task-popup"\n            type="text"\n          />\n          <div class="add-task-popup-buttons">\n            <button class="button-add-task-popup" id="button-add-task-popup">\n              Add\n            </button>\n            <button\n              class="button-cancel-task-popup"\n              id="button-cancel-task-popup"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>`,n.initAddTaskButtons(),n.loadTasks(t)}static createProject(t){document.getElementById("user-projects").innerHTML+=` \n      <button class="button-project" data-project-button>\n        <div class="left-project-panel">\n          <i class="fas fa-tasks"></i>\n          <span>${t}</span>\n        </div>\n        <div class="right-project-panel">\n          <i class="fas fa-times"></i>\n        </div>\n      </button>`,n.initProjectButtons()}static createTask(t,e){document.getElementById("tasks-list").innerHTML+=`\n      <button class="button-task" data-task-button>\n        <div class="left-task-panel">\n          <i class="far fa-circle"></i>\n          <p class="task-content">${t}</p>\n          <input type="text" class="input-task-name" data-input-task-name>\n        </div>\n        <div class="right-task-panel">\n          <p class="due-date" id="due-date">${e}</p>\n          <input type="date" class="input-due-date" data-input-due-date>\n          <i class="fas fa-times"></i>\n        </div>\n      </button>`,n.initTaskButtons()}static clear(){n.clearProjects(),n.clearProjectPreview(),n.clearTasks()}static clearProjects(){document.getElementById("user-projects").textContent=""}static clearProjectPreview(){document.getElementById("project-preview").textContent=""}static clearTasks(){document.getElementById("tasks-list").textContent=""}static initAddProjectButtons(){const t=document.getElementById("button-add-project"),e=document.getElementById("button-add-project-popup"),s=document.getElementById("button-cancel-project-popup");t.addEventListener("click",n.openAddProjectPopup),e.addEventListener("click",n.addProject),s.addEventListener("click",n.closeAddProjectPopup)}static openAddProjectPopup(){document.getElementById("add-project-popup").classList.add("active"),this.classList.add("active")}static closeAddProjectPopup(){document.getElementById("add-project-popup").classList.remove("active"),document.getElementById("input-add-project-popup").value="",document.getElementById("button-add-project").classList.remove("active")}static addProject(){const t=document.getElementById("input-add-project-popup").value;""===t||a.getTodoList().contains(t)||(a.addProject(new e(t)),n.createProject(t)),n.closeAddProjectPopup()}static initProjectButtons(){const t=document.getElementById("button-inbox-projects"),e=document.getElementById("button-today-projects"),s=document.getElementById("button-week-projects"),a=document.querySelectorAll("[data-project-button]");t.addEventListener("click",n.openInboxTasks),e.addEventListener("click",n.openTodayTasks),s.addEventListener("click",n.openWeekTasks),a.forEach((t=>t.addEventListener("click",n.handleProjectButton)))}static openInboxTasks(){}static openTodayTasks(){}static openWeekTasks(){}static handleProjectButton(t){const e=this.children[0].children[1].textContent;t.target.classList.contains("fa-times")?n.deleteProject(e):n.loadProjectContent(e)}static deleteProject(t){const e=document.getElementById("project-preview").children[0].textContent;a.deleteProject(t),n.clearProjects(),n.loadProjects(),t===e&&n.clearProjectPreview()}static initAddTaskButtons(){const t=document.getElementById("button-add-task"),e=document.getElementById("button-add-task-popup"),s=document.getElementById("button-cancel-task-popup");t.addEventListener("click",n.openAddTaskPopup),e.addEventListener("click",n.addTask),s.addEventListener("click",n.closeAddTaskPopup)}static openAddTaskPopup(){document.getElementById("add-task-popup").classList.add("active"),this.classList.add("active")}static closeAddTaskPopup(){document.getElementById("add-task-popup").classList.remove("active"),document.getElementById("input-add-task-popup").value="",document.getElementById("button-add-task").classList.remove("active")}static addTask(){const e=document.getElementById("input-add-task-popup").value,s=document.getElementById("project-preview").children[0].textContent;""===e||a.getTodoList().getProject(s).contains(e)||(a.addTask(s,new t(e)),n.createTask(e,"No date")),n.closeAddTaskPopup()}static initTaskButtons(){const t=document.querySelectorAll("[data-task-button]"),e=document.querySelectorAll("[data-input-task-name"),s=document.querySelectorAll("[data-input-due-date");t.forEach((t=>t.addEventListener("click",n.handleTaskButton))),e.forEach((t=>t.addEventListener("keypress",n.renameTask))),s.forEach((t=>t.addEventListener("change",n.setTaskDate)))}static handleTaskButton(t){t.target.classList.contains("fa-circle")?n.setTaskCompleted(this):t.target.classList.contains("fa-times")?n.deleteTask(this):t.target.classList.contains("task-content")?n.openRenameInput(this):t.target.classList.contains("due-date")&&n.openSetDateInput(this)}static setTaskCompleted(t){const e=document.getElementById("project-preview").children[0].textContent,s=t.children[0].children[1].textContent;a.deleteTask(e,s),n.clearTasks(),n.loadTasks(e)}static deleteTask(t){const e=document.getElementById("project-preview").children[0].textContent,s=t.children[0].children[1].textContent;a.deleteTask(e,s),n.clearTasks(),n.loadTasks(e)}static openRenameInput(t){const e=t.children[0].children[1],s=t.children[0].children[2];e.classList.add("active"),s.classList.add("active")}static closeRenameInput(t){const e=t.children[0].children[1],s=t.children[0].children[2];e.classList.remove("active"),s.classList.remove("active")}static renameTask(t){if("Enter"!==t.key)return;const e=document.getElementById("project-preview").children[0].textContent,s=this.previousElementSibling.textContent,c=this.value;""!==c?(a.renameTask(e,s,c),n.clearTasks(),n.loadTasks(e),this.value="",n.closeRenameInput(this.parentNode.parentNode)):n.closeRenameInput(this.parentNode.parentNode)}static openSetDateInput(t){const e=t.children[1].children[0],s=t.children[1].children[1];e.classList.add("active"),s.classList.add("active")}static closeSetDateInput(t){const e=t.children[1].children[0],s=t.children[1].children[1];e.classList.remove("active"),s.classList.remove("active")}static setTaskDate(){const t=this.parentNode.parentNode,e=document.getElementById("project-preview").children[0].textContent,s=t.children[0].children[1].textContent,c=this.value;a.setTaskDate(e,s,c),n.clearTasks(),n.loadTasks(e),n.closeSetDateInput(t)}}document.addEventListener("DOMContentLoaded",n.loadHomepage())})();